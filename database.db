import sqlite3
from werkzeug.security import generate_password_hash

# Criar/abrir o banco
db_path = "/mnt/data/database.db"
conn = sqlite3.connect(db_path)
cur = conn.cursor()

# Criar tabelas
cur.executescript('''
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT UNIQUE NOT NULL,
    senha TEXT NOT NULL,
    role TEXT DEFAULT 'user',
    coach_id INTEGER,
    FOREIGN KEY (coach_id) REFERENCES usuarios(id)
);

CREATE TABLE IF NOT EXISTS exercicios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    usuario_id INTEGER,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

CREATE TABLE IF NOT EXISTS series (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    exercicio_id INTEGER,
    usuario_id INTEGER,
    serie INTEGER,
    carga REAL,
    reps INTEGER,
    data DATE,
    FOREIGN KEY (exercicio_id) REFERENCES exercicios(id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);
''')

# Inserir usuários com senhas seguras
usuarios = [
    ("admin", "admin123", "admin", None),
    ("coachbeta", "coach123", "coach", None),
    ("alunobeta", "aluno123", "aluno", 2),  # coachbeta terá ID 2 após inserção
]

for nome, senha, role, coach_id in usuarios:
    hashed = generate_password_hash(senha)
    try:
        cur.execute("""
            INSERT OR IGNORE INTO usuarios (nome, senha, role, coach_id)
            VALUES (?, ?, ?, ?)
        """, (nome, hashed, role, coach_id))
    except Exception as e:
        print(f"Erro ao inserir {nome}: {e}")

conn.commit()
conn.close()

db_path
